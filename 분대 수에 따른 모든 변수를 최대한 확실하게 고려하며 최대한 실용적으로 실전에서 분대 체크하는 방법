240428 - 분대 체크

※ 우측 상단에 있는 점 세 개 버튼 누르시고, View Option에서 'Wrap Lines' 체크하신 후에 읽어주세요.


'죽은 팀의 계산법':

가장 기본적인 분대 체크 (빈 인원을 통해 채워진 인원을 찾는 방식)은 기본적으로 다음과 같은 2 스텝 과정으로 구성된다
"
스텝 1: "공백 분대 (죽은 분대) 계산"
스텝 2: "계산을 통해 알아낸 공백 분대에 대한 정보를 반전시킴으로써 '채워진 분대 (산 분대)'에 대한 정보 유도 및 바로 사용할 수 있는 형태의 인포로 결론화
"
이 방식을 직접 사용하는 방법을 알고 싶다면 글을 계속해서 이어나가보도록 하자.


"원래 채워져야 할 수 안에서 비는 수를 찾는 방식"
A에 B = 바로 A*3부터 시작.
- 다 풀분대일 때 기준으로 남은 분대에 3 곱해서 계산해서 비는 인원을 계산하면 듀오랑 솔로가 얼마나 있는지 비교적 가장 빠르고 직관적으로 계산할 수 있다.
- ex) 예를 들면 7분대에 17명이 남았을 경우, 이 자체만 고려해서는 에이펙스에서 각 분대가 구성될 수 있는 모든 경우의 수인 각 1, 2, 3의 수가 공통적으로 총 7번만 쓰이며 넘을 수 없는 절댓값 17을 충족시키는 모든 경우의 수를 고려하고 확실시 할 수 없다. 5분대 풀팀 (3x5=15) 에 2팀 솔로 (1x2=2)일수도 있고, 3팀 풀팀에 (3x3=9) 4팀 듀오일수도 있고 (2x4=8), 이것이 변수를 전부 고려한 것도 아니다. 고려해야 할 경우의 수가 팀이 많이 비면 빌수록 훨씬 더 가중된다. 
- 하지만 모든 경우의 수에 대한 체크는 분대 수 정보를 통해 충분히 계산할 수 있고 그 자체로도 유용성이 있는데, 그 방법은 다음과 같다. 다음과 같은 사고 과정을 잘 따라가 보자.


-> 7*3 = 모든 분대가 풀팀일 경우 21명이어야 함. 그런데 4명 빔
-> 우리에게 필요한 것은 우리에게 위협이 될 수 있는 "현재 살아 있는 팀"에 대한 분대 수 및 분대 수가 어떤 조합으로 구성되어 있는지에 대한 구성 정보 (트리오, 듀오, 솔로인 팀이 각각 몇팀씩 있는지) 
-> 그런데 우리에게 있는 정보는 "공백 분대"에 대한 정보, 즉 이미 죽어 있는 팀에 대한 정보. 
-> 이것을 활용해서 지금부터 "살아 있는 팀"에 대한 분대 정보를 역으로 반전시키고 소거해가며 연역적*인 방식으로 최대한 확실하고 정확하게 계산해볼 것이다.
-> 빈 인원수인 4명 안에서 나올 수 있는 모든 조합은 2/2, 2/1/1, 1/1/1/1이다.** 이건 "빈 인원수"에 대한, 즉 죽은 공백 인원에 대한 분대체크다. 살아 있는 생존 인원에 대한 분대체크와 헷갈리지 말아야 한다.
-> 그러면 이 "죽은 인원이 구성할 수 있는 모든 경우의 수의 조합 정보"는 곧 반전되어 산 인원을 계산해내는 데에 쓰일 수 있다. 총 7분대가 남았고, 실제로는 17명이 남아 있다. 그러면 하나하나씩 대입해보면 된다.*** 
-> 7에 17인데 죽은 팀이 2/2 (듀오/듀오) = 살아 있는 7팀의 17명 중에서 무조건 2팀이 1/1 (솔로/솔로) 라는 뜻. = 따라서 총 분대수 7팀에서 '짜바리 팀'를 빼주면 (7-2=5) 5팀 풀팀, 2팀 솔로 (15+1+1=17)
-> 7에 17인데 죽은 팀이 2/1/1 (듀오/솔로/솔로) = 살아 있는 7팀의 17명 중에서 무조건 3팀이 1/2/2 (솔로/듀오/듀오) 라는 뜻. = 따라서 4팀 풀팀, 2팀 듀오, 1팀 솔로. (12+4+1=17)
-> 7에 17인데 죽은 팀이 1/1/1/1 (솔로/솔로/솔로/솔로) = 살아 있는 7팀의 17명 중에서 무조건 4팀이 2/2/2/2 (듀오/듀오/듀오/듀오)라는 뜻. = 따라서 3팀 풀팀, 4팀 듀오. (9+8=17)
-> 우리가 실전에서 쓸 수 있는 형태로 위 정보를 결론화까지 하면, 풀분대의 수가 가장 많은 경우가 기본적으로는 가장 위험하므로 (자리에 상관 없이 가장 경계를 많이 해야 함) 이 경우를 상정하고 게임하면 좋다.

*: 연역법이란 이미 알고 있는 판단을 근거로 새로운 판단을 유도하는 추론이다. 여기서 이미 알고 있는 판단은 전제, 새로운 판단은 결론이다. 
**: 인원 수가 가장 많은 높은 수에서부터 낮은 수로 내림차순으로 정렬해 계산하면 실전에서 가장 명확하게 이해하고 생각을 정리해 상황을 통제하는 것을 돕는데 있어 가장 큰 도움이 된다.
***:실전에서는 적당한 선에서. 다 하나하나 계산하고 있을 시간과 여유가 없을 수도 있으니 가장 중요한 것을 우선순위로 놓고 먼저 수행해야 한다.

더 간략하게 축약 및 일반화하면
-> 현재 남은 분대 수 X 3 (에이펙스 내 인게임 최대 인원) = 현재 분대 수로 나올 수 있는 최대 인원
-> 현재 분대 수로 나올 수 있는 최대 인원 - 현재 남은 인원 수 = 죽은 인원 수
-> 죽은 인원 수로 나올 수 있는 모든 조합의 경우의 수를 3명짜리 분대, 0명짜리 분대를 제외하고 듀오, 솔로로만 내림차순으로 구성.
-> 나온 죽은 인원 수에 대한 경우의 수를 그대로 반전시켜 "현재 살아 있는 팀 중 인원 손실이 있는 분대"에 대한 수와 그 구성에 대한 여러 가능성을 계산 및 파악
-> 파악된 가능성을 게임 내 다른 감각 기관 (소리, 시각 정보, 킬로그 등)으로 수집된 정보와 조합해 가장 가능성 있는 경우의 수와 가장 희박한 경우의 수를 판별 및 소거, 우선순위 할당
-> 할당된 우선순위를 기반으로 인게임 플레이 방향성 확립 및 실행, 실행하며 완전히 클리어되고 확실시되지 않은 경우의 수에 대해 여전히 가능성을 열어두고 절대 전적으로 배제하지는 않으며 우선순위를 인지하며 내 플레이의 비중 분배.




- 법칙: 현재 비어 있는 인원이 이루는 경우의 수 = (반전했을 시에) 현재 채워져 있는 인원수가 이루는 경우의 수. 죽은 인원과 산 인원은 언제나 반전 관계. 어떤 이유로든 인원 손실이 생기지 않았는데 산 팀에 공백이 생길 수는 없다.
{3 (에이펙스 내에서 각 팀이 이룰 수 있는 최대 인원수) - 현재 비어 있는 팀의 인원 수 = 현재 채워져 있는 팀의 인원수 } 



- 팁: 인원 빈 분대 계산시 0명 분대짜리는 없고 3명 분대는 풀분대 계산으로 들어가 어차피 의미 없으니까 2명 분대 (듀오), 1명 분대 (솔로)의 인원 손실 있는 경우만 고려해주면 된다. 또한 풀팀 듀오 솔로의 순서 등도 전혀 신경쓸 필요 없다. 인원의 수와 위치 정보나 분대 수의 숫자로만은 전체 분대가 얼마나 남아 있는지만을 알 수 있을 뿐 어떤 팀이 어떤 팀인지까지 특정한 정보는 알 수 없으니까 순서도 큰 의미가 없이 3명인 팀 X분대, 2명인 팀 Y분대, 1명인 팀 Z분대 식으로 숫자만 계산할 수 있으면 된다.

- 그러면 만약 위 예시에서 (살아 있는 팀이) 솔로가 5명이거나 하는 다른 경우는 없는가? -> 조금 더 생각해보며 사고의 흐름을 깊게 따라가보면 발견하게 되겠지만, 일단 비어야 하는 인원이 4명인데 솔로가 5명이다라는 것은 기본적인 인원 수에서부터 맞지 않으며, 죽은 4명이 솔로인 경우의 수 = 산 4분대가 듀오인 경우의 수와 같기 때문에, 죽은 5명이 솔로 = 산 5분대가 듀오라는 가능성과 같다. 그런데 산 5분대가 듀오다? => 분대수를 여기서 이 가정으로 계산해보면, 2x5 = 10이 되고, 따라서 이 5 듀오 분대라고 가정한 팀을 현재 인원 상황에서 빼보면, (분대 수 계산: 7-5=2 / 인원 수 계산: 17-10=7), 즉 2에 7이라는 결론이 나온다. 근데 에이펙스 안에서 한 분대 안에 들어갈 수 있는 인원은 최대 3명이고, 절대 3명 이상을 넘을 수 없다. 따라서 구성될 수 있는 경우의 수는 2에 6이 최대다. 즉, 어불성설이라는 것. 이게 성립되지 않는 이유는, 이 분대 수 추적의 인과 과정에서 시작과 끝은 얼핏 보기에는 다르고 이어져 있지 않고 단절되어 있는 것처럼 보이지만 사실은 전부 다 이어져 있기 때문에 단추를 하나를 잘못 꿰면 전부 다 잘못 들어가게 되는 것이다. 왜냐? "반드시 정해진 수 만큼만 비어야 하는" 공백 분대의 수 = "반드시 정해진 수 만큼만 살아 있어야 하는" 채워진 분대의 수가 항상 0을 고려하지 않는 (즉 1부터 시작하는) 3진수 안에서 반전 관계이기 때문이다.*

*글쓴이도 어떻게든 이 방법이 고려하지 못한 가능성이나 틀린 부분이 있지 않을까? 하고 마구잡이로 될 수 있을 만한 가능성을 다 대입해 봤지만 빈 분대수가 관장하는 가능성 이외에 성립하는 가능성을 찾지 못했다. 말이 안되거나 혹은 말이 되는 걸 찾으면 이미 빈 분대의 가능성이 먼저 적용되고 있었던 얘기였던 경우밖에 없었다. 수의 관계가 이루는 원리에 관한 것이기 때문에. 혹시라도 자신이 찾으면 디스코드 donghakim1으로 연락 바람. 뭐 6팀이 솔로면 남은 팀에 대한 인원수가 부족하고, 6팀이 풀팀이면 인원수가 남은 팀의 수를 초과해 버리고, 적당한 조합같은 걸 찾으면 이미 '죽은 팀'의 계산법에 의해 고려된 가능성이었다. 산 인원으로부터 계산하면 뭔가 다른 가능성이 있지 않을까? 했는데 어차피 서로 관계성으로 연결되어 있는데 그 원리를 모르고 무지했던 소리였다. 결국 돌고 돌아 순서 놀이였던 경우였던 적도 많고.. 직접 써보면서 경험해보자.



+ 거기에 추가적으로 분대와 킬로그, 그리고 아이 체크 (눈으로 보고 딴 정도)를 서로 조합해서 응용함으로써 서로 일치하고 상응하는 정보들을 토대로 우리에게 필요한 인포의 조각들을 맞춰나가는 것이다. 트리오 1 듀오 1 솔로 1 남았으면 우리가 세 분대의 위치 정보는 다 아는데 인원수 정보를 세명인 팀만 확실하게 알면 나머지 분대들은 최소 듀오 혹은 솔로라는 점을 바로 알 수 있게 되니까 더 확실하고 자신감 있게 플레이할 수 있는 것.

++ 이러한 Macro한 (거시적인) 맥락의 "전체 정보"와 더 작지만 확실한 "부분 정보"가 겹쳐지면 큰 맥락의 정보의 케이스 (틀, 상황의 전체 형상을 통제하는 거푸집 같은 느낌)에 작은 정보를 (거푸집을 채울 녹아 있는 액체 형태의 금속 같은 느낌) 대입시켜서 결과적으로 훨씬 더 확실한 정보를 알아낼 수 있고, 그것은 곧 훨씬 더 믿을 만한 근거로 작용하면서, 우리가 무엇을 해야 할지, 무엇이 최선의 선택일지에 대한 길을 볼 수 있도록 해주고, 우리가 해야 할 플레이를 더 확신 있게 확실하게, 자신감 있게 신빙성 있는 합리적인 논거에 기반해 실행함으로써 좋은 결과로 이어질 수 있게 해준다.
아이체크, 킬로그 및 총소리 정보 등 적팀 분대에 대한 더 확실한 정보와 더해지면 이러한 분대체크 정보는 후반 링으로 가서 분대수가 10분대 이하로 떨어지기 시작한 시점부터 점점 더 큰 밸류를 가지기 시작한다. 언제 어떻게 어나더를 가야 할지에 대한 타이밍 정보로써 사전에 킬로그 정보, 총 소리 정보, 육안 정보 등과 합쳐져서 작용하기도 하고.





- ※ 매우 중요: 실전에 가서는 분대체크보다 생각해야 할 것들이 매우 많기 때문에 이론적으로 완벽한 분대 체크를 하는 것에 집중하기보다, 분대 체크는 아무리 길어도 약 20초 내로 끝낼 수 있는 간략한 형태로 수행해주고 다른 정보들과 조합하면서 잘못된 정보를 교정하고 올바른 정보들을 확보해 우판단의 근거로 사용하려 하는 것이 훨씬 더 좋다. 
지금까지 배운 것은 오차 범위를 최대한 줄이고, 최대한 정확하게 개념을 이해하기 위한 이론적인 해설과 설명이었다. 하지만 이것으로만은 실전에서 사용할만한 실용성이 없다. 따라서 이 다음부터는 실전에서 제한된 시간, 상황, 자원 안에서 다양한 압박과 신경 자원에 대한 소모가 이어지는 상황에서 위 이론을 어떻게 가장 실전적인 형태로 간략화하고, 가장 핵심적이고 필요한 형태로만 짧게 사고하며 적용할 수 있는 지에 대해서 요약해서 적용해보겠다.


(실제로 실전에서는 아래와 같은 형태로 사고가 빠르고 간략하게 가장 순수하고 핵심적인, 간결한 형태로 정제되어 진행될 것이다. 군더더기가 가장 적은 형태가 곧 가장 효율적)
0. 8에 20이라 가정했을 때 총 분대수에서 우리팀 분대 한 팀 빼고, 우리 팀 인원 총 인원수에서 빼기 (우리 팀 풀팀이라 가정, 8-1=7 / 20-3=17, 7에 17). 남은 분대 수 계산을 하려고 한다면, 다른 무엇보다 가장 먼저 이것부터 해야 한다.
1. 7에 17
2. 7x3=21, 21-17 = 4명 비네?
3. 2/2, 2/1/1, 1/1/1/1
4. 1/1, 1/2/2, 2/2/2/2
5. 솔로 2팀, 듀오 2팀에 솔로 1팀, 듀오 4팀 // 풀팀 5팀, 풀팀 4팀, 풀팀 3팀.
-> 풀팀에 대해서는 그냥 따로 추가적인 계산을 해줄 필요 없이 총 분대수 (이 경우 7)에서 반전했을 때 나오는 "짜바리 분대" (이 경우 2, 3, 4) 를 바로 빼주면 나온다. (정확한 수가 알고 싶으면 3까지 곱하기)
->> 풀팀에 대한 정보가 알고 싶다면 짜바리 분대의 구성 인원에는 큰 신경을 쓸 필요 없이 총 몇 팀으로 나뉘는지만 계산해서 바로 몇번 나뉘는지로 짜바리 분대가 총 몇팀인지를 손쉽게 계산할 수 있다. (3번, 4번에서 1/1/1/1이라 하면 4번 나뉘니까 짜바리 분대는 4분대라는 결론이 즉시 나온다)
->>> 풀팀에 대한 계산까지 마치는 것이 가장 중요하다. 솔로, 듀오는 크게 위협이 되지 않으나 풀팀의 분대수는 특히나 정확하게 체크하고 트래킹해야 하기 때문.

6. 가장 위험한 경우 및 우리가 사전에 가지고 있던 인포 or 앞으로 따야 할 인포와 조합시키는 것과 함께 위 분대 수 정보를 염두에 두고 플레이하며 계속 자신의 생각에 지장을 주지 않는 선에서 낮은 의식 자원을 할당하며 Low-key 정보 트래킹.


예시를 한번 더 들어서 앞서 배운 것들을 정제해보자.
0. 4에 9라 가정. 우리팀은 3명 다 살아 있음.
1. 3에 6.
2. 3명 빔
3. 2/1 or 1/1/1
4. 솔로 1 듀오 1 or 듀오 3
5. 풀팀 1 or 풀팀 0 (3 {총분대} - 3 {짜바리 분대} = 0)
6. 풀팀 1 듀오 1 솔로 1 or 풀팀 0 듀오 3.


실전에서 복잡한 계산을 몇 초 이내에 계산해내야 할 경우는 2~3번까지만 빠르게 필요한 or 가능한 수준까지만 계산하고 기본 분대의 정규 인원 수보다 부족한 인원만 빠르게 계산한 뒤에, 빈 인원을 통해 살아 있는 팀이 구성될 수 있는 조합을 감각적이고 직관적으로 유추하는 형태로, 계산 + 감각으로 신속하게 필요한 결론과 정보를 연산해내기도 할 것이다. 위와 같은 분대 계산의 과정을 수없이 거치다 보면, 나중에는 1번 정보만 보고도 최종적인 결론을 몇 초 이내에 감각적으로 빠르게 산출해낼 수 있는 경지에 도달할 것. (실제로 계산 과정을 정확하게 일일히 다 거쳤을 때와 엄밀히 따지면 차이는 존재할 수 있으나 실전에서 사용하는 데에는 아무런 무리나 문제가 없고 가장 실용적으로 활용 가능할 것)


P.S. - 실전에 가서 모든 상황에 위의 수학적인 추론, 계산 처리 과정을 일일히 다 밟아줄 수 있을 만한 여유와 시간이 있으리란 보장도 없고, 위 방법이 이 글을 읽는 각 개개인에게 가장 편하고, 잘 맞고, 효율적인 방법이 아닐 가능성도 존재한다. 따라서 위 방법의 근본적인 원리만 참고하고 그것을 토대로 개인적인 필요에 따라 자신만의 방법을 개량하고 고안해서 스스로에게 가장 효율적인 방법, 스스로가 가장 편하게 분대를 체크하고 계산할 수 있는 방법을 개발하고, 실전에 적용하도록 하자. 완전히 버릴 필요도, 완전히 똑같이 그대로 따라할 필요도 없다. 자신의 필요를 목적으로 두자.







이것은 굳이 읽을 필요는 없으나 글쓴이가 체계적으로 분대 체크하는 법을 알게 되기 이전에 (오늘 알게 됨) 개인적으로 사용해오고 습관화시켰던 방식이다. 혹시라도 스스로가 글쓴이와 비슷한 방법을 여전히 사용하고 있다면 위와 같은 더 나은 방법론으로 개선적 대체를 하는 선택지를 부디 충분히 고려해주길 바란다. 그동안 몰라서 못 썼던 것일 뿐 위 방식이 훨씬 더 낫다.

"현재 남은 인원을 절대값으로 들어가는 분대수를 대입해서 듀오/솔로 분대를 찾는 방식" (귀추적 추측): 서 기존에 쓰던 방식인 적당한 수를 대입해서 풀분대를 계산한 뒤에 (예를 들면 7에 17이면 대강 3의 배수로 남은 인원 안에 떨어지는 값을 찾아서 3*5 = 15 하고 나머지 1 1 솔로 두팀으로 찾는 식) 짜바리 팀의 수를 계산하는 것은, 만약 풀팀 인원이 그 배수에 떨어지지 않을 경우 생기는 변수들에 대해 고려하지 않기 때문에 가장 좋은 방법은 아니고 배제하게 됨으로써 생기는 변수의 양이 원래 채워져야 하는 절대값에서 공백 인원을 찾는 방식보다 더 많다. 왜냐면 위의 예시의 경우처럼 풀팀이 반드시 5팀이라는 보장이 없기 때문. 3팀 풀팀에 (9) + 4팀이 듀오 (8) 일수도 있고 훨씬 더 고려해야 할 가능성이 실제로는 많은 것이다. 
  그래서 이 방법은 배제하는 가능성이 상당히 많고 그로 인해 생길 수 있는 변수가 악영향을 끼칠 수 있어서 여태까지 야매로 써오긴 했지만 좋은 방법은 아니다.
만약 우리가 풀팀 두팀이 싸운다고 생각하고 솔로 한팀 남은 상태에서 뒷각이나 옆각을 배제하고 어나더를 갔는데 알고 보니 듀오가 풀팀 상대로 잘 싸우고 있던 것이었고 우리를 어나더 올 수 있는 팀이 알고 보니 듀오라서 솔로보다 힘이 쎄서 어나더 당하는 경우도 생길 수 있기 때문.
가장 가능성이 있을 것 같은 경우의 수를 감으로 판단하고 귀추적*으로 추론하는 느낌이 상당 부분 존재하기 때문에 논리적으로 확실시되지 않고 직접 불확실한 인포의 영역이 Clear되어서 확정되기 전까지는 열어두어야 하는 가능성을 일찍이 배제하는 경향이 상당 부분 존재한다. 즉, 비일관적이라는 것. 그리고 이는 곧 불안정하다는 것. 불안정하다는 것은 곧 꾸준히 우승을 반복하고 꾸준히 이길 수 없으며 기복이 더 생길 수 있다는 것.

*: 귀추법(abduction)의 사전적인 정의는 '가정을 선택하는 추론의 한 방법으로, 만약 사실이라면 관계있는 증거를 가장 잘 설명할 것 같은 가정을 선택하는 방법'이다. 주어진 사실들로부터 시작해서 가장 그럴듯한 혹은 최선의 설명을 추론하는 것이다.



작성자 Elma.

TWITCH: https://www.twitch.tv/elmaa1_
CHZZK: https://chzzk.naver.com/a607877812200d0363ee2a7a23b7fc88
YOUTUBE: https://www.youtube.com/channel/UCKWBm16AFt6svn9VQh1VqIw
TWITTER: https://twitter.com/E1M4_
DISCORD: https://discord.gg/UYtmVbEB7x

더 많은 정보는 https://discord.com/channels/1186519022859206749/1189182920116674620 참고 바람.
