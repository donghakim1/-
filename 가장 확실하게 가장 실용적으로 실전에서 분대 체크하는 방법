분대 체크: 
"원래 채워져야 할 수 안에서 비는 수를 찾는 방식": A에 B = 바로 A*3 다 풀분대일 때 기준으로 남은 분대에 3 곱해서 계산해서 비는 인원을 계산하면 듀오랑 솔로가 얼마나 있는지 바로 직관적으로 계산할 수 있다.
예를 들면 7분대에 17명이 남았을 경우, 이 자체만 고려해서는 각 1, 2, 3의 수가 공통적으로 총 7번만 쓰이며 절댓값 17을 충족시키는 모든 경우의 수를 고려하고 확실시 할 수 없다. 5분대 풀팀 (3x5=15) 에 2팀 솔로 (1x2=2)일수도 있고, 3팀 풀팀에 (3x3=9) 4팀 듀오일수도 있고 (2x4=8), 고려해야 할 경우의 수가 팀이 많이 비면 빌수록 훨씬 더 가중된다. 하지만 모든 경우의 수에 대한 체크는 분대 수 정보를 통해 충분히 계산할 수 있고 그 자체로도 유용성이 있는데, 그 방법은 다음과 같다. 위 예시를 그대로 적용해보자.

-> 7*3 = 모든 분대가 풀팀일 경우 21명이어야 함. 그런데 4명 빔
-> 우리에게 필요한 것은 우리에게 위협이 될 수 있는 "현재 살아 있는 팀"에 대한 분대 수 및 분대 수가 어떤 조합으로 구성되어 있는지에 대한 구성 정보 (트리오, 듀오, 솔로) 
-> 그런데 우리에게 있는 정보는 "공백 분대"에 대한 정보, 즉 이미 죽어 있는 팀에 대한 정보. 
-> 이것을 활용해서 나올 수 있는 올 수 있는 조합의 수 빈 인원수인 4명 안에서 나올 수 있는 모든 조합은 2/2, 2/1/1, 1/1/1/1. 이건 "빈 인원수"에 대한, 즉 죽은 공백 인원에 대한 분대체크다. 살아 있는 생존 인원에 대한 분대체크와 헷갈리지 말아야 한다.

- 팁: 인원 빈 분대 계산시 0명 분대짜리는 없고 3명 분대는 풀분대 계산으로 들어가 어차피 의미 없으니까 2명 분대 (듀오), 1명 분대 (솔로)의 인원 손실 있는 경우만 고려해주면 된다. 또한 풀팀 듀오 솔로의 순서 등도 전혀 신경쓸 필요 없다. 인원의 수와 위치 정보나 분대 수의 숫자로만은 전체 분대가 얼마나 남아 있는지만을 알 수 있을 뿐 어떤 팀이 어떤 팀인지까지 특정한 정보는 알 수 없으니까 순서도 큰 의미가 없이 3명인 팀 X분대, 2명인 팀 Y분대, 1명인 팀 Z분대 식으로 숫자만 계산할 수 있으면 된다.

거기에 추가적으로 분대와 킬로그, 그리고 아이 체크 (눈으로 보고 딴 정도)를 서로 조합해서 응용함으로써 서로 일치하고 상응하는 정보들을 토대로 우리에게 필요한 인포의 조각들을 맞춰나가는 것이다. 트리오 1 듀오 1 솔로 1 남았으면 우리가 세 분대의 위치 정보는 다 아는데 인원수 정보를 세명인 팀만 확실하게 알면 나머지 분대들은 최소 듀오 혹은 솔로라는 점을 바로 알 수 있게 되니까 더 확실하고 자신감 있게 플레이할 수 있는 것.

이러한 Macro한 (거시적인) 맥락의 "전체 정보"와 더 작지만 확실한 "부분 정보"가 겹쳐지면 큰 맥락의 정보의 케이스 (틀, 상황의 전체 형상을 통제하는 거푸집 같은 느낌)에 작은 정보를 (거푸집을 채울 녹아 있는 액체 형태의 금속 같은 느낌) 대입시켜서 결과적으로 훨씬 더 확실한 정보를 알아낼 수 있고, 그것은 곧 훨씬 더 믿을 만한 근거로 작용하면서, 우리가 무엇을 해야 할지, 무엇이 최선의 선택일지에 대한 길을 볼 수 있도록 해주고, 우리가 해야 할 플레이를 더 확신 있게 확실하게, 자신감 있게 신빙성 있는 합리적인 논거에 기반해 실행함으로써 좋은 결과로 이어질 수 있게 해준다.
아이체크, 킬로그 및 총소리 정보 등 적팀 분대에 대한 더 확실한 정보와 더해지면 이러한 분대체크 정보는 후반 링으로 가서 분대수가 10분대 이하로 떨어지기 시작한 시점부터 점점 더 큰 밸류를 가지기 시작한다. 언제 어떻게 어나더를 가야 할지에 대한 타이밍 정보로써 사전에 킬로그 정보, 총 소리 정보, 육안 정보 등과 합쳐져서 작용하기도 하고.


"현재 남은 인원을 절대값으로 들어가는 분대수를 대입해서 듀오/솔로 분대를 찾는 방식": 서 기존에 쓰던 방식인 적당한 수를 대입해서 풀분대를 계산한 뒤에 (예를 들면 7에 17이면 대강 3의 배수로 남은 인원 안에 떨어지는 값을 찾아서 3*5 = 15 하고 나머지 1 1 솔로 두팀으로 찾는 식) 짜바리 팀의 수를 계산하는 것은, 만약 풀팀 인원이 그 배수에 떨어지지 않을 경우 생기는 변수들에 대해 고려하지 않기 때문에 가장 좋은 방법은 아니고 배제하게 됨으로써 생기는 변수의 양이 원래 채워져야 하는 절대값에서 공백 인원을 찾는 방식보다 더 많다. 왜냐면 위의 예시의 경우처럼 풀팀이 반드시 5팀이라는 보장이 없기 때문. 3팀 풀팀에 (9) + 4팀이 듀오 (8) 일수도 있고 훨씬 더 고려해야 할 가능성이 실제로는 많은 것이다. 
  그래서 이 방법은 배제하는 가능성이 상당히 많고 그로 인해 생길 수 있는 변수가 악영향을 끼칠 수 있어서 여태까지 야매로 써오긴 했지만 좋은 방법은 아니다.
만약 우리가 풀팀 두팀이 싸운다고 생각하고 솔로 한팀 남은 상태에서 뒷각이나 옆각을 배제하고 어나더를 갔는데 알고 보니 듀오가 풀팀 상대로 잘 싸우고 있던 것이었고 우리를 어나더 올 수 있는 팀이 알고 보니 듀오라서 솔로보다 힘이 쎄서 어나더 당하는 경우도 생길 수 있기 때문.
